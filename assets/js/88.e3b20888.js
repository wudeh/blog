(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{613:function(n,e,t){"use strict";t.r(e);var s=t(6),o=Object(s.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("p",[this._v("npm install会检测是否存在package-lock.json文件：\n一、没有lock文件\n1.1、分析依赖关系，这是因为我们包会依赖其他的包，并且会多个包之间产生相同的依赖的关系。\n1.2、从registry仓库中下载压缩包（如果我们设置了镜像，那么会从镜像服务器下载压缩包）。\n1.3、 获取到压缩包后会对压缩包进行缓存（从npm5开始有的）。\n1.4、将压缩包解压到项目的node_modules文件夹中（前面我们讲过，require的查找顺序会在该包下面查找）。\n二、有lock文件\n2.1、检测lock中包的版本是否和package.json中一致（会按照semver版本规范检测）。\n2.2、不一致，那么会重新构建依赖关系，直接会走顶层的流程。\n2.3、一致的情况下，会去优先查找缓存。\n2.4、没有找到，会从registry仓库下载，直接走顶层流程。\n2.5、查找到，会获取缓存中的压缩文件，并且将压缩文件解压到node_modules文件夹中。")])])}),[],!1,null,null,null);e.default=o.exports}}]);